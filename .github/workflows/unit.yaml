name: Unit tests

on:
  workflow_call:
    secrets:
      EARTHENGINE_SERVICE_ACCOUNT:
        required: true
      EARTHENGINE_PROJECT:
        required: true
      CODECOV_TOKEN:
        required: true
  push:
    branches:
      - main
  pull_request:

env:
  FORCE_COLOR: 1
  PIP_ROOT_USER_ACTION: ignore
  EARTHENGINE_SERVICE_ACCOUNT: ${{ secrets.EARTHENGINE_SERVICE_ACCOUNT }}
  EARTHENGINE_PROJECT: ${{ secrets.EARTHENGINE_PROJECT }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - uses: pre-commit/action@v3.0.0

  mypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install nox
        run: pip install nox[uv]
      - name: run mypy checks
        run: nox -s mypy

  docs:
    needs: [lint, mypy]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install nox
        run: pip install nox[uv]
      - name: build static docs
        run: nox -s docs

  build:
    needs: [lint, mypy]
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        python-version: ["3.10", "3.11"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install nox
        run: pip install nox[uv]
      - name: test with pytest
        run: nox -s ci-test
      - name: assess dead fixtures
        if: ${{ matrix.python-version == '3.10' }}
        shell: bash
        run: nox -s dead-fixtures
      - uses: actions/upload-artifact@v4
        if: ${{ matrix.python-version == '3.10' }}
        with:
          name: coverage-${{ matrix.os }}-${{ matrix.python-version }}
          path: coverage.xml

  coverage:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/download-artifact@v4
        with:
          path: coverage-artifacts
      - name: codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
          fail_ci_if_error: true
          files: coverage-artifacts/**/coverage.xml
